name: Android CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'src/android/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/android/**'

# Concurrency group to ensure only one workflow runs at a time per ref
concurrency:
  group: android-${{ github.ref }}
  cancel-in-progress: true

# Required permissions for actions
permissions:
  contents: read
  security-events: write
  actions: write
  checks: write

env:
  ANDROID_HOME: /usr/local/lib/android/sdk
  JAVA_HOME: /opt/java/temurin-17
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true

jobs:
  android_build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x src/android/gradlew

      - name: Run unit tests
        run: |
          cd src/android
          ./gradlew test --stacktrace

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          script: cd src/android && ./gradlew connectedCheck --stacktrace

      - name: Build debug APK
        run: |
          cd src/android
          ./gradlew assembleDebug --stacktrace

      - name: Build release APK
        run: |
          cd src/android
          ./gradlew assembleRelease --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: src/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 5

      - name: Upload release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: src/android/app/build/outputs/apk/release/app-release.apk
          retention-days: 5

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            src/android/app/build/reports/tests/
            src/android/app/build/reports/androidTests/
          retention-days: 5

  security_scan:
    name: Security Analysis
    needs: android_build
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: security-extended
          config-file: ./.github/codeql/codeql-config.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build for CodeQL Analysis
        run: |
          cd src/android
          chmod +x gradlew
          ./gradlew assembleDebug --no-daemon

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: android-security
          upload: true

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Baby Cry Analyzer'
          path: 'src/android'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload OWASP Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-check-report
          path: reports
          retention-days: 5

  deploy:
    name: Deploy to Play Store
    needs: [android_build, security_scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 15

    steps:
      - name: Download release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: release

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.babycryanalyzer
          releaseFiles: release/app-release.apk
          track: internal
          status: completed
          changesNotSentForReview: false